type Task  @withSubscription @auth(query: { rule: "query($USER: String!) {    queryTask {        user(filter: { username: { eq: $USER } }) {            username        }    }}"}) {
	id: ID!
	title: String! @search(by:[fulltext])
	completed: Boolean! @search
	user: User!
}

type User  @withSubscription {
	username: String! @search(by:[hash]) @id
	name: String
	tasks: [Task] @hasInverse(field:user)
}

# Dgraph.Authorization {"Header":"X-Auth-Token","Namespace":"https://dgraph.io/jwt/claims","JWKURL":"https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com","Audience":["YOUR FIREBASE PROJECT NAME"]}
